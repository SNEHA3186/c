#include<stdio.h>
#include<malloc.h>
#include<stdlib.h>
#include<conio.h>
struct cdlinklist
{
		struct cdlinklist*left;
		int data;
		struct cdlinklist*right;
};
typedef struct cdlinklist node;
node*start=NULL;
node*getnode()
{
	node*newnode;
    newnode=(node*)malloc(sizeof(node));
    printf("\nenter data");
    scanf("%d",&newnode->data);
    newnode->left=NULL;
    newnode->right=NULL;
    return newnode;
}
void create_list(int n)
{
	int i;
	node*newnode,*temp;
	for(i=0;i<n;i++)
	{
		newnode=getnode();
		if(start==NULL)
		{
			start=newnode;
			newnode->left=start;
			newnode->right=start;
		}
		else{
             newnode->left=start->left;
			 newnode->right=start;
			 start->left->right=newnode;
			 start->left=newnode;
		}
	}
}
void traverse_right_to_left()
{
	node*temp;
	temp=start;
	printf("\n The contents of list(right to left)\n");
	if(start==NULL)
	printf("\n Empty list");
	else
	{

	do
	{
		temp=temp->left;
		printf("%d->",temp->data);
	}    while(temp!=start);

    }
	printf("x\n");
}

void traverse_left_to_right()
{
	node*temp;
	temp=start;
	printf("\n The contents of list(left to right)\n");
	if(start==NULL)
	printf("\n Empty list");
	else
	{
    do
		{
			printf("%d->",temp->data);
			temp=temp->right;

		}				

		while(temp!=start);
				printf("x\n");
	}

}
int countnode()
{
	int count=1;
	node*temp;
	temp=start;
	do
	{
		count++;
		temp=temp->right;
	}while(temp->right!=start);
	return count;
}

void insert_at_pos()
{
	node*newnode,*temp;
	int pos,nodectr,i;
	newnode=getnode();
	printf("\n enter the position");
	scanf("%d",&pos);
	nodectr=countnode();
	if(pos>(nodectr+1))
	{
		printf("position out of range");
		return;
	}
	else if(pos>1&&pos<=nodectr)
	{
		temp=start;
		for(i=1;i<pos-1;i++)
		{
			temp=temp->right;
		}
		newnode->left=temp;
		newnode->right=temp->right;
		temp->right->left=newnode;
		temp->right=newnode;
	}
	else
	{
		printf("%d is not a intermediate position",pos);
		return;
	}
}

int main()
{
	int num,ch;
	while(1)
	{
	
	printf("1.create void list\n");
	printf("2.insert at intermediate position\n");
	printf("3.display\n");
	printf("enter your choice:\n");
		scanf("%d",&ch);
    	switch(ch)
	{ 
		case 1:
			printf("enter the number of element you want to insert\n:");
				scanf("%d",&num);
				create_list(num);
				break;
		case 2:
        	insert_at_pos();
        	break;
		case 3:
			traverse_left_to_right();
			traverse_right_to_left();
					   
			 break;

    }
}
    return 0;
}
